% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fits-TSModelFit.R
\name{TSModelFit}
\alias{TSModelFit}
\title{The 'TSModelFit' class}
\description{
The 'TSModelFit' class

The 'TSModelFit' class
}
\section{Super class}{
\code{\link[lgpr2:StanModelFit]{lgpr2::StanModelFit}} -> \code{TSModelFit}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{term_confs}}{The term configurations used.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-TSModelFit-new}{\code{TSModelFit$new()}}
\item \href{#method-TSModelFit-print}{\code{TSModelFit$print()}}
\item \href{#method-TSModelFit-function_draws}{\code{TSModelFit$function_draws()}}
\item \href{#method-TSModelFit-create_functiondraws}{\code{TSModelFit$create_functiondraws()}}
\item \href{#method-TSModelFit-measurement_error}{\code{TSModelFit$measurement_error()}}
\item \href{#method-TSModelFit-fit_quality_df}{\code{TSModelFit$fit_quality_df()}}
\item \href{#method-TSModelFit-fit_quality_summary}{\code{TSModelFit$fit_quality_summary()}}
\item \href{#method-TSModelFit-plot}{\code{TSModelFit$plot()}}
\item \href{#method-TSModelFit-predict}{\code{TSModelFit$predict()}}
\item \href{#method-TSModelFit-predict_time}{\code{TSModelFit$predict_time()}}
\item \href{#method-TSModelFit-clone}{\code{TSModelFit$clone()}}
}
}
\if{html}{\out{
<details><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="lgpr2" data-topic="StanModelFit" data-id="datanames"><a href='../../lgpr2/html/StanModelFit.html#method-StanModelFit-datanames'><code>lgpr2::StanModelFit$datanames()</code></a></span></li>
<li><span class="pkg-link" data-pkg="lgpr2" data-topic="StanModelFit" data-id="draws"><a href='../../lgpr2/html/StanModelFit.html#method-StanModelFit-draws'><code>lgpr2::StanModelFit$draws()</code></a></span></li>
<li><span class="pkg-link" data-pkg="lgpr2" data-topic="StanModelFit" data-id="get_data"><a href='../../lgpr2/html/StanModelFit.html#method-StanModelFit-get_data'><code>lgpr2::StanModelFit$get_data()</code></a></span></li>
<li><span class="pkg-link" data-pkg="lgpr2" data-topic="StanModelFit" data-id="get_model"><a href='../../lgpr2/html/StanModelFit.html#method-StanModelFit-get_model'><code>lgpr2::StanModelFit$get_model()</code></a></span></li>
<li><span class="pkg-link" data-pkg="lgpr2" data-topic="StanModelFit" data-id="get_stan_data"><a href='../../lgpr2/html/StanModelFit.html#method-StanModelFit-get_stan_data'><code>lgpr2::StanModelFit$get_stan_data()</code></a></span></li>
<li><span class="pkg-link" data-pkg="lgpr2" data-topic="StanModelFit" data-id="get_stan_fit"><a href='../../lgpr2/html/StanModelFit.html#method-StanModelFit-get_stan_fit'><code>lgpr2::StanModelFit$get_stan_fit()</code></a></span></li>
<li><span class="pkg-link" data-pkg="lgpr2" data-topic="StanModelFit" data-id="gq"><a href='../../lgpr2/html/StanModelFit.html#method-StanModelFit-gq'><code>lgpr2::StanModelFit$gq()</code></a></span></li>
<li><span class="pkg-link" data-pkg="lgpr2" data-topic="StanModelFit" data-id="log_z_pars"><a href='../../lgpr2/html/StanModelFit.html#method-StanModelFit-log_z_pars'><code>lgpr2::StanModelFit$log_z_pars()</code></a></span></li>
<li><span class="pkg-link" data-pkg="lgpr2" data-topic="StanModelFit" data-id="loglik"><a href='../../lgpr2/html/StanModelFit.html#method-StanModelFit-loglik'><code>lgpr2::StanModelFit$loglik()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TSModelFit-new"></a>}}
\if{latex}{\out{\hypertarget{method-TSModelFit-new}{}}}
\subsection{Method \code{new()}}{
Create model fit object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TSModelFit$new(model, stan_fit, datasets, stan_data, term_confs)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{model}}{A \code{\link{StanModel}} object.}

\item{\code{stan_fit}}{The created 'Stan' fit.}

\item{\code{datasets}}{Original data (list of data frames).}

\item{\code{stan_data}}{The created 'Stan' data. Stored mainly for easier
debugging.}

\item{\code{term_confs}}{The term configurations used.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TSModelFit-print"></a>}}
\if{latex}{\out{\hypertarget{method-TSModelFit-print}{}}}
\subsection{Method \code{print()}}{
Print object description.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TSModelFit$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TSModelFit-function_draws"></a>}}
\if{latex}{\out{\hypertarget{method-TSModelFit-function_draws}{}}}
\subsection{Method \code{function_draws()}}{
Extract one component as a \code{FunctionDraws} object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TSModelFit$function_draws(
  component = "f_sum",
  data_scale = TRUE,
  capped = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{component}}{Name of the component (term). Valid names can
be checked using \code{$model$term_names()}. Alternatively, can be
an integer that is the component index.}

\item{\code{data_scale}}{Transform to data scale? Has no effect if
extracting a single component.}

\item{\code{capped}}{Should a capped version of the draws be taken? This
is useful if the fit/prediction explodes to infinity. Only has effect
if \code{component="f_sum"} or \code{component="y_log_pred"}.}

\item{\code{dataname}}{name of data set used to evaluate the function}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TSModelFit-create_functiondraws"></a>}}
\if{latex}{\out{\hypertarget{method-TSModelFit-create_functiondraws}{}}}
\subsection{Method \code{create_functiondraws()}}{
Initialize a \code{\link{FunctionDraws}} object from the fit.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TSModelFit$create_functiondraws(input_vars, f_name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_vars}}{Column names in the data.}

\item{\code{f_name}}{Name of function in 'Stan' code.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TSModelFit-measurement_error"></a>}}
\if{latex}{\out{\hypertarget{method-TSModelFit-measurement_error}{}}}
\subsection{Method \code{measurement_error()}}{
Compute estimate of the measurement error percentage of each observation
as 'rvars'.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TSModelFit$measurement_error()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TSModelFit-fit_quality_df"></a>}}
\if{latex}{\out{\hypertarget{method-TSModelFit-fit_quality_df}{}}}
\subsection{Method \code{fit_quality_df()}}{
Get a data frame that is useful for assessing fit quality.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TSModelFit$fit_quality_df()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TSModelFit-fit_quality_summary"></a>}}
\if{latex}{\out{\hypertarget{method-TSModelFit-fit_quality_summary}{}}}
\subsection{Method \code{fit_quality_summary()}}{
Get summary statistics useful for assessing fit quality.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TSModelFit$fit_quality_summary(
  metric = "error_perc",
  by = NULL,
  fun = stats::median
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{metric}}{Metric used to assess quality. Can be \code{"error_perc"}
or \code{"loglik"}.}

\item{\code{by}}{The factor by which to aggregate. If \code{NULL}, the id
variable of the model is used.}

\item{\code{fun}}{Function used to aggregate.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TSModelFit-plot"></a>}}
\if{latex}{\out{\hypertarget{method-TSModelFit-plot}{}}}
\subsection{Method \code{plot()}}{
Plot fit or predictive distribution
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TSModelFit$plot(
  f_reference = NULL,
  plot_y = TRUE,
  capped = TRUE,
  predictive = TRUE,
  f_ref_name = "the true signal",
  filter_by = NULL,
  kept_vals = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{f_reference}}{Reference function to plot against the fit.}

\item{\code{plot_y}}{Should y data be plotted?}

\item{\code{capped}}{Should a capped version of the fit be plotted? This
is useful if the fit explodes to infinity.}

\item{\code{predictive}}{Should this plot the predictive distribution for
new observations? Otherwise the inferred signal is plotted.}

\item{\code{f_ref_name}}{Name of the reference function.}

\item{\code{filter_by}}{Factor to filter the rows by.}

\item{\code{kept_vals}}{Values of the factor that are not filtered out.}

\item{\code{...}}{Arguments passed to the plot method of
\code{\link{FunctionDraws}}.
Compute predictions at test points}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TSModelFit-predict"></a>}}
\if{latex}{\out{\hypertarget{method-TSModelFit-predict}{}}}
\subsection{Method \code{predict()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TSModelFit$predict(data = NULL, fitted_params = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data}}{The input data frame of test points.}

\item{\code{fitted_params}}{Parameters or model fit.}

\item{\code{...}}{Other arguments to \code{generate_quantities()}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new fit object.
Compute predictions at given time points
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TSModelFit-predict_time"></a>}}
\if{latex}{\out{\hypertarget{method-TSModelFit-predict_time}{}}}
\subsection{Method \code{predict_time()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TSModelFit$predict_time(
  t_test,
  t_var = "t",
  y_test = NULL,
  t_var_copy = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{t_test}}{The test time points}

\item{\code{t_var}}{Name of the time variable}

\item{\code{y_test}}{Test y}

\item{\code{t_var_copy}}{Names of other continuous covariates to which
\code{t_test} should be copied.}

\item{\code{...}}{Arguments passed to \code{$predict()}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new fit object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TSModelFit-clone"></a>}}
\if{latex}{\out{\hypertarget{method-TSModelFit-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TSModelFit$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
